{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/UpdatePost.js\";\nimport React, { useEffect, useState } from 'react';\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-light.css';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { updatePost, getPost } from '../actions/blog';\nimport { changePage } from '../actions/page';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst UpdatePost = ({\n  updatePost,\n  getPost,\n  blog: {\n    post\n  }\n}) => {\n  const [formData, setFormData] = useState({\n    articleId: post.id,\n    title: post.title,\n    description: post.description,\n    content: post.content\n  });\n  const {\n    articleId,\n    title,\n    description,\n    content\n  } = formData;\n  useEffect(() => {\n    console.log(post);\n  }, []);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const mdParser = new MarkdownIt({\n    html: true,\n    linkify: true,\n    typographer: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return hljs.highlight(lang, str).value;\n        } catch (__) {}\n      }\n\n      return '';\n    }\n  });\n\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    setFormData({ ...formData,\n      content: text\n    });\n  };\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    updatePost({\n      articleId,\n      title,\n      description,\n      content\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    name: \"title\",\n    value: title,\n    placeholder: \"Please enter the article title\",\n    helperText: \"No more than 20 character!\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Description\",\n    name: \"description\",\n    value: description,\n    placeholder: \"Please enter the article description\",\n    helperText: \"No more than 50 character!\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdEditor, {\n    style: {\n      height: '100%'\n    },\n    renderHTML: text => mdParser.render(text),\n    value: content,\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      float: 'right',\n      marginTop: '3%'\n    },\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Post\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Update Article\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"To Update your article, please click the confirm button.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Confirm\"))));\n};\n\nconst mapStateToProps = state => ({\n  blog: state.blog\n});\n\nUpdatePost.propTypes = {\n  updatePost: PropTypes.func.isRequired,\n  getPost: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  updatePost,\n  getPost\n})(UpdatePost);","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/UpdatePost.js"],"names":["React","useEffect","useState","MdEditor","MarkdownIt","hljs","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","Input","makeStyles","Paper","PropTypes","connect","updatePost","getPost","changePage","useStyles","theme","paper","height","display","overflow","flexDirection","UpdatePost","blog","post","formData","setFormData","articleId","id","title","description","content","console","log","classes","open","setOpen","handleClickOpen","handleClose","mdParser","html","linkify","typographer","highlight","str","lang","getLanguage","value","__","handleEditorChange","text","onChange","e","target","name","onSubmit","preventDefault","shrink","render","float","marginTop","cursor","mapStateToProps","state","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/atom-one-light.css'\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { updatePost, getPost } from '../actions/blog';\nimport { changePage } from '../actions/page';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        height: '800px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    }\n}));\nconst UpdatePost = ({ updatePost, getPost, blog: { post } }) => {\n\n    const [formData, setFormData] = useState({\n        articleId: post.id,\n        title: post.title,\n        description: post.description,\n        content: post.content\n    })\n    const { articleId, title, description, content } = formData;\n    useEffect(() => {\n        console.log(post);\n    }, [])\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    }\n    const mdParser = new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        highlight: function (str, lang) {\n            if (lang && hljs.getLanguage(lang)) {\n                try {\n                    return hljs.highlight(lang, str).value\n                } catch (__) {\n\n                }\n            }\n            return '';\n        }\n    });\n    const handleEditorChange = ({ html, text }) => {\n        setFormData({ ...formData, content: text })\n    }\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    };\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        updatePost({ articleId, title, description, content });\n        setOpen(false);\n    }\n    return (\n        <div>\n\n            <TextField\n                label=\"Title\"\n                name=\"title\"\n                value={title}\n                placeholder=\"Please enter the article title\"\n                helperText=\"No more than 20 character!\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={e => onChange(e)}\n            />\n            <TextField\n                label=\"Description\"\n                name=\"description\"\n                value={description}\n                placeholder=\"Please enter the article description\"\n                helperText=\"No more than 50 character!\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={e => onChange(e)}\n            />\n\n            {/* <TextField id=\"component-outlined\" value={name} name=\"description\" onChange={e => onChange(e)} label=\"Name\" /> */}\n            <Paper className={classes.paper}>\n                <MdEditor style={{ height: '100%' }}\n                    renderHTML={(text) => mdParser.render(text)}\n                    value={content} onChange={handleEditorChange\n                    } />\n            </Paper>\n            <Button variant='contained' style={{ float: 'right', marginTop: '3%' }} onClick={handleClickOpen}>Post</Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"draggable-dialog-title\"\n            >\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Update Article\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To Update your article, please click the confirm button.\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n\n                    <Button color=\"primary\" onClick={e => onSubmit(e)}>\n                        Confirm\n                     </Button>\n                </DialogActions>\n            </Dialog>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    blog: state.blog\n})\n\nUpdatePost.propTypes = {\n    updatePost: PropTypes.func.isRequired,\n    getPost: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps, { updatePost, getPost })(UpdatePost);\n"]},"metadata":{},"sourceType":"module"}