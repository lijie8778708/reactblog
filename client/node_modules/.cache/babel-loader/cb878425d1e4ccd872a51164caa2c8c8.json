{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/NewPost.js\";\nimport React, { useState } from 'react';\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-light.css';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, FormControl, OutlinedInput, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { newPost } from '../actions/blog';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst NewPost = ({\n  newPost\n}) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    content: \"\"\n  });\n  const {\n    title,\n    description,\n    content\n  } = formData;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const mdParser = new MarkdownIt({\n    html: true,\n    linkify: true,\n    typographer: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return hljs.highlight(lang, str).value;\n        } catch (__) {}\n      }\n\n      return '';\n    }\n  });\n\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    setFormData({ ...formData,\n      content: text\n    });\n  };\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    newPost({\n      title,\n      description,\n      content\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    name: \"title\",\n    value: title,\n    placeholder: \"Please enter the article title\",\n    helperText: \"No more than 20 character!\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Description\",\n    name: \"description\",\n    value: description,\n    placeholder: \"Please enter the article description\",\n    helperText: \"No more than 50 character!\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MdEditor, {\n    style: {\n      height: '100%'\n    },\n    renderHTML: text => mdParser.render(text),\n    value: content,\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      float: 'right',\n      marginTop: '3%'\n    },\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Post\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Post New Article\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"To post your article, please click the confirm button.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Confirm\")))));\n};\n\nNewPost.propTypes = {\n  newPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  newPost\n})(NewPost);","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/NewPost.js"],"names":["React","useState","MdEditor","MarkdownIt","hljs","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","FormControl","OutlinedInput","InputLabel","makeStyles","Paper","PaperProps","PropTypes","connect","newPost","useStyles","theme","paper","height","display","overflow","flexDirection","NewPost","formData","setFormData","title","description","content","classes","open","setOpen","handleClickOpen","handleClose","mdParser","html","linkify","typographer","highlight","str","lang","getLanguage","value","__","handleEditorChange","text","onChange","e","target","name","onSubmit","preventDefault","shrink","render","float","marginTop","cursor","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/atom-one-light.css'\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, FormControl, OutlinedInput, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { newPost } from '../actions/blog';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        height: '800px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    }\n}));\n\n\nconst NewPost = ({ newPost }) => {\n\n    const [formData, setFormData] = useState({\n        title: \"\",\n        description: \"\",\n        content: \"\"\n    })\n    const { title, description, content } = formData;\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const mdParser = new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        highlight: function (str, lang) {\n            if (lang && hljs.getLanguage(lang)) {\n                try {\n                    return hljs.highlight(lang, str).value\n                } catch (__) {\n\n                }\n            }\n            return '';\n        }\n    });\n    const handleEditorChange = ({ html, text }) => {\n        setFormData({ ...formData, content: text })\n    }\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    };\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        newPost({ title, description, content });\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <form onSubmit={e => onSubmit(e)}>\n                <TextField\n                    label=\"Title\"\n                    name=\"title\"\n                    value={title}\n                    placeholder=\"Please enter the article title\"\n                    helperText=\"No more than 20 character!\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={e => onChange(e)}\n                />\n                <TextField\n                    label=\"Description\"\n                    name=\"description\"\n                    value={description}\n                    placeholder=\"Please enter the article description\"\n                    helperText=\"No more than 50 character!\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={e => onChange(e)}\n                />\n\n                {/* <TextField id=\"component-outlined\" value={name} name=\"description\" onChange={e => onChange(e)} label=\"Name\" /> */}\n                <Paper className={classes.paper}>\n                    <MdEditor style={{ height: '100%' }}\n                        renderHTML={(text) => mdParser.render(text)}\n                        value={content} onChange={handleEditorChange\n                        } />\n                </Paper>\n                <Button variant='contained' style={{ float: 'right', marginTop: '3%' }} onClick={handleClickOpen}>Post</Button>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"draggable-dialog-title\"\n                >\n                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                        Post New Article\n                </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To post your article, please click the confirm button.\n                </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button autoFocus onClick={handleClose} color=\"primary\">\n                            Cancel\n                    </Button>\n\n                        <Button type='submit' color=\"primary\">\n                            Confirm\n                     </Button>\n                    </DialogActions>\n                </Dialog>\n            </form>\n        </div>\n    )\n}\nNewPost.propTypes = {\n    newPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { newPost })(NewPost);\n"]},"metadata":{},"sourceType":"module"}