{"ast":null,"code":"/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nCategory: common\n*/\nmodule.exports = function (hljs) {\n  hljs.LANGUAGES.bash = function () {\n    var BASH_LITERAL = {\n      'true': 1,\n      'false': 1\n    };\n    var VAR1 = {\n      className: 'variable',\n      begin: '\\\\$([a-zA-Z0-9_]+)\\\\b'\n    };\n    var VAR2 = {\n      className: 'variable',\n      begin: '\\\\$\\\\{(([^}])|(\\\\\\\\}))+\\\\}',\n      contains: [hljs.C_NUMBER_MODE]\n    };\n    var STRING = {\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE, VAR1, VAR2],\n      relevance: 0\n    };\n    var TEST_CONDITION = {\n      className: 'test_condition',\n      begin: '',\n      end: '',\n      contains: [STRING, VAR1, VAR2, hljs.C_NUMBER_MODE],\n      keywords: {\n        'literal': BASH_LITERAL\n      },\n      relevance: 0\n    };\n    return {\n      defaultMode: {\n        keywords: {\n          'keyword': {\n            'if': 1,\n            'then': 1,\n            'else': 1,\n            'fi': 1,\n            'for': 1,\n            'break': 1,\n            'continue': 1,\n            'while': 1,\n            'in': 1,\n            'do': 1,\n            'done': 1,\n            'echo': 1,\n            'exit': 1,\n            'return': 1,\n            'set': 1,\n            'declare': 1\n          },\n          'literal': BASH_LITERAL\n        },\n        contains: [{\n          className: 'shebang',\n          begin: '(#!\\\\/bin\\\\/bash)|(#!\\\\/bin\\\\/sh)',\n          relevance: 10\n        }, hljs.HASH_COMMENT_MODE, {\n          className: 'comment',\n          begin: '\\\\/\\\\/',\n          end: '$',\n          illegal: '.'\n        }, hljs.C_NUMBER_MODE, STRING, VAR1, VAR2, hljs.inherit(TEST_CONDITION, {\n          begin: '\\\\[ ',\n          end: ' \\\\]',\n          relevance: 0\n        }), hljs.inherit(TEST_CONDITION, {\n          begin: '\\\\[\\\\[ ',\n          end: ' \\\\]\\\\]'\n        })]\n      }\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/node_modules/highlight/lib/vendor/highlight.js/languages/bash.js"],"names":["module","exports","hljs","LANGUAGES","bash","BASH_LITERAL","VAR1","className","begin","VAR2","contains","C_NUMBER_MODE","STRING","end","illegal","BACKSLASH_ESCAPE","relevance","TEST_CONDITION","keywords","defaultMode","HASH_COMMENT_MODE","inherit"],"mappings":"AAAA;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC/BA,EAAAA,IAAI,CAACC,SAAL,CAAeC,IAAf,GAAsB,YAAU;AAC9B,QAAIC,YAAY,GAAG;AAAC,cAAS,CAAV;AAAa,eAAU;AAAvB,KAAnB;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,SAAS,EAAE,UADF;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAX;AAIA,QAAIC,IAAI,GAAG;AACTF,MAAAA,SAAS,EAAE,UADF;AAETC,MAAAA,KAAK,EAAE,4BAFE;AAGTE,MAAAA,QAAQ,EAAE,CAACR,IAAI,CAACS,aAAN;AAHD,KAAX;AAKA,QAAIC,MAAM,GAAG;AACXL,MAAAA,SAAS,EAAE,QADA;AAEXC,MAAAA,KAAK,EAAE,GAFI;AAECK,MAAAA,GAAG,EAAE,GAFN;AAGXC,MAAAA,OAAO,EAAE,KAHE;AAIXJ,MAAAA,QAAQ,EAAE,CAACR,IAAI,CAACa,gBAAN,EAAwBT,IAAxB,EAA8BG,IAA9B,CAJC;AAKXO,MAAAA,SAAS,EAAE;AALA,KAAb;AAOA,QAAIC,cAAc,GAAG;AACnBV,MAAAA,SAAS,EAAE,gBADQ;AAEnBC,MAAAA,KAAK,EAAE,EAFY;AAERK,MAAAA,GAAG,EAAE,EAFG;AAGnBH,MAAAA,QAAQ,EAAE,CAACE,MAAD,EAASN,IAAT,EAAeG,IAAf,EAAqBP,IAAI,CAACS,aAA1B,CAHS;AAInBO,MAAAA,QAAQ,EAAE;AACR,mBAAWb;AADH,OAJS;AAOnBW,MAAAA,SAAS,EAAE;AAPQ,KAArB;AAUA,WAAO;AACLG,MAAAA,WAAW,EAAE;AACXD,QAAAA,QAAQ,EAAE;AACR,qBAAW;AAAC,kBAAO,CAAR;AAAW,oBAAS,CAApB;AAAuB,oBAAS,CAAhC;AAAmC,kBAAO,CAA1C;AAA6C,mBAAQ,CAArD;AAAwD,qBAAU,CAAlE;AAAqE,wBAAa,CAAlF;AAAqF,qBAAU,CAA/F;AAAkG,kBAAO,CAAzG;AAA4G,kBAAO,CAAnH;AAAsH,oBAAS,CAA/H;AAAkI,oBAAS,CAA3I;AAA8I,oBAAS,CAAvJ;AAA0J,sBAAW,CAArK;AAAwK,mBAAQ,CAAhL;AAAmL,uBAAY;AAA/L,WADH;AAER,qBAAWb;AAFH,SADC;AAKXK,QAAAA,QAAQ,EAAE,CACR;AACEH,UAAAA,SAAS,EAAE,SADb;AAEEC,UAAAA,KAAK,EAAE,mCAFT;AAGEQ,UAAAA,SAAS,EAAE;AAHb,SADQ,EAMRd,IAAI,CAACkB,iBANG,EAOR;AACEb,UAAAA,SAAS,EAAE,SADb;AAEEC,UAAAA,KAAK,EAAE,QAFT;AAEmBK,UAAAA,GAAG,EAAE,GAFxB;AAGEC,UAAAA,OAAO,EAAE;AAHX,SAPQ,EAYRZ,IAAI,CAACS,aAZG,EAaRC,MAbQ,EAcRN,IAdQ,EAeRG,IAfQ,EAgBRP,IAAI,CAACmB,OAAL,CAAaJ,cAAb,EAA6B;AAACT,UAAAA,KAAK,EAAE,MAAR;AAAgBK,UAAAA,GAAG,EAAE,MAArB;AAA6BG,UAAAA,SAAS,EAAE;AAAxC,SAA7B,CAhBQ,EAiBRd,IAAI,CAACmB,OAAL,CAAaJ,cAAb,EAA6B;AAACT,UAAAA,KAAK,EAAE,SAAR;AAAmBK,UAAAA,GAAG,EAAE;AAAxB,SAA7B,CAjBQ;AALC;AADR,KAAP;AA2BD,GAvDqB,EAAtB;AAwDC,CAzDD","sourcesContent":["/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nCategory: common\n*/\nmodule.exports = function(hljs){\nhljs.LANGUAGES.bash = function(){\n  var BASH_LITERAL = {'true' : 1, 'false' : 1};\n  var VAR1 = {\n    className: 'variable',\n    begin: '\\\\$([a-zA-Z0-9_]+)\\\\b'\n  };\n  var VAR2 = {\n    className: 'variable',\n    begin: '\\\\$\\\\{(([^}])|(\\\\\\\\}))+\\\\}',\n    contains: [hljs.C_NUMBER_MODE]\n  };\n  var STRING = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE, VAR1, VAR2],\n    relevance: 0\n  };\n  var TEST_CONDITION = {\n    className: 'test_condition',\n    begin: '', end: '',\n    contains: [STRING, VAR1, VAR2, hljs.C_NUMBER_MODE],\n    keywords: {\n      'literal': BASH_LITERAL\n    },\n    relevance: 0\n  };\n\n  return {\n    defaultMode: {\n      keywords: {\n        'keyword': {'if' : 1, 'then' : 1, 'else' : 1, 'fi' : 1, 'for' : 1, 'break' : 1, 'continue' : 1, 'while' : 1, 'in' : 1, 'do' : 1, 'done' : 1, 'echo' : 1, 'exit' : 1, 'return' : 1, 'set' : 1, 'declare' : 1},\n        'literal': BASH_LITERAL\n      },\n      contains: [\n        {\n          className: 'shebang',\n          begin: '(#!\\\\/bin\\\\/bash)|(#!\\\\/bin\\\\/sh)',\n          relevance: 10\n        },\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'comment',\n          begin: '\\\\/\\\\/', end: '$',\n          illegal: '.'\n        },\n        hljs.C_NUMBER_MODE,\n        STRING,\n        VAR1,\n        VAR2,\n        hljs.inherit(TEST_CONDITION, {begin: '\\\\[ ', end: ' \\\\]', relevance: 0}),\n        hljs.inherit(TEST_CONDITION, {begin: '\\\\[\\\\[ ', end: ' \\\\]\\\\]'})\n      ]\n    }\n  };\n}();\n};"]},"metadata":{},"sourceType":"script"}