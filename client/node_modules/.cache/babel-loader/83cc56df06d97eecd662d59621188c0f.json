{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/NewPost.js\";\nimport React, { useState } from 'react';\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-light.css';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst NewPost = () => {\n  const classes = useStyles();\n  const [markdown, setMarkdown] = useState(\"\");\n  const mdParser = new MarkdownIt({\n    html: true,\n    linkify: true,\n    typographer: true,\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return hljs.highlight(lang, str).value;\n        } catch (__) {}\n      }\n\n      return '';\n    }\n  });\n\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    setMarkdown(text);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdEditor, {\n    style: {\n      height: '100%'\n    },\n    renderHTML: text => mdParser.render(text),\n    value: markdown,\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Post\"));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/NewPost.js"],"names":["React","useState","MdEditor","MarkdownIt","hljs","Button","Paper","makeStyles","useStyles","theme","paper","height","display","overflow","flexDirection","NewPost","classes","markdown","setMarkdown","mdParser","html","linkify","typographer","highlight","str","lang","getLanguage","value","__","handleEditorChange","text","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,wCAAP;AACA,OAAO,0CAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,OADL;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,aAAa,EAAE;AAJZ;AAD8B,CAAZ,CAAD,CAA5B;;AASA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMkB,QAAQ,GAAG,IAAIhB,UAAJ,CAAe;AAC5BiB,IAAAA,IAAI,EAAE,IADsB;AAE5BC,IAAAA,OAAO,EAAE,IAFmB;AAG5BC,IAAAA,WAAW,EAAE,IAHe;AAI5BC,IAAAA,SAAS,EAAE,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC5B,UAAIA,IAAI,IAAIrB,IAAI,CAACsB,WAAL,CAAiBD,IAAjB,CAAZ,EAAoC;AAChC,YAAI;AACA,iBAAOrB,IAAI,CAACmB,SAAL,CAAeE,IAAf,EAAqBD,GAArB,EAA0BG,KAAjC;AACH,SAFD,CAEE,OAAOC,EAAP,EAAW,CAEZ;AACJ;;AACD,aAAO,EAAP;AACH;AAb2B,GAAf,CAAjB;;AAeA,QAAMC,kBAAkB,GAAG,CAAC;AAAET,IAAAA,IAAF;AAAQU,IAAAA;AAAR,GAAD,KAAoB;AAC3CZ,IAAAA,WAAW,CAACY,IAAD,CAAX;AACH,GAFD;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEd,OAAO,CAACN,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB;AACI,IAAA,UAAU,EAAGmB,IAAD,IAAUX,QAAQ,CAACY,MAAT,CAAgBD,IAAhB,CAD1B;AAEI,IAAA,KAAK,EAAEb,QAFX;AAEqB,IAAA,QAAQ,EAAEY,kBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ;AAWH,CAnCD;;AAqCA,eAAed,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/atom-one-light.css'\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { Button, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        height: '800px',\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    }\n}));\n\nconst NewPost = () => {\n\n    const classes = useStyles();\n\n    const [markdown, setMarkdown] = useState(\"\")\n\n    const mdParser = new MarkdownIt({\n        html: true,\n        linkify: true,\n        typographer: true,\n        highlight: function (str, lang) {\n            if (lang && hljs.getLanguage(lang)) {\n                try {\n                    return hljs.highlight(lang, str).value\n                } catch (__) {\n\n                }\n            }\n            return '';\n        }\n    });\n    const handleEditorChange = ({ html, text }) => {\n        setMarkdown(text)\n    }\n    return (\n        <div>\n            <Paper className={classes.paper}>\n                <MdEditor style={{ height: '100%' }}\n                    renderHTML={(text) => mdParser.render(text)}\n                    value={markdown} onChange={handleEditorChange\n                    } />\n            </Paper>\n            <Button variant='contained'>Post</Button>\n        </div>\n    )\n}\n\nexport default NewPost\n"]},"metadata":{},"sourceType":"module"}