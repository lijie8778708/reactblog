{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts, removePost } from '../actions/blog';\nimport PropTypes from 'prop-types';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst Dashboard = ({\n  getPosts,\n  removePost,\n  blog\n}) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 8));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, blog.posts.length - page * rowsPerPage);\n\n  const onClick = id => {\n    removePost(id);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, [onClick]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      maxWidth: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, blog.posts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((post, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: JSON.stringify(post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, post.id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      maxWidth: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, post.description), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, post.created), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, post.status), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UpdateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 56\n    }\n  }, \"Update\"), \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 56\n    }\n  }, \"Remove\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 8],\n    component: \"div\",\n    count: blog.posts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Post New Article\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"To post your article, please click the confirm button.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Confirm\"))));\n};\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  removePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  blog: state.blog\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  removePost\n})(Dashboard);","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js"],"names":["React","useEffect","makeStyles","getPosts","removePost","PropTypes","UpdateIcon","RemoveIcon","connect","Paper","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Redirect","useStyles","theme","paper","height","display","overflow","flexDirection","Dashboard","blog","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","open","setOpen","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","posts","length","onClick","id","handleClickOpen","handleClose","maxWidth","slice","map","post","index","JSON","stringify","title","description","created","status","cursor","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts, removePost } from '../actions/blog';\nimport PropTypes from 'prop-types';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst Dashboard = ({ getPosts, removePost, blog }) => {\n\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const [open, setOpen] = React.useState(false);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 8));\n    setPage(0);\n  };\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, blog.posts.length - page * rowsPerPage);\n\n  const onClick = (id) => {\n    removePost(id);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    getPosts()\n  }, [onClick])\n  return (\n    <Paper className={classes.paper}>\n\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell style={{ maxWidth: '250px' }}>Description</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {blog.posts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((post, index) => (\n              <TableRow key={JSON.stringify(post.id)}>\n                <TableCell>{post.id}</TableCell>\n                <TableCell>{post.title}</TableCell>\n                <TableCell style={{ maxWidth: '250px' }}>{post.description}</TableCell>\n                <TableCell align=\"right\">{post.created}</TableCell>\n                <TableCell align=\"right\">{post.status}</TableCell>\n                <TableCell align=\"right\"><UpdateIcon /><Button color=\"primary\">Update</Button> </TableCell>\n                <TableCell align=\"right\"><RemoveIcon /><Button color=\"secondary\" onClick={handleClickOpen}>Remove</Button></TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 8]}\n        component=\"div\"\n        count={blog.posts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          Post New Article\n                </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To post your article, please click the confirm button.\n                </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n                    </Button>\n\n          <Button color=\"primary\" onClick={handleClose}>\n            Confirm\n                     </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  removePost: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n  blog: state.blog\n})\nexport default connect(mapStateToProps, { getPosts, removePost })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}