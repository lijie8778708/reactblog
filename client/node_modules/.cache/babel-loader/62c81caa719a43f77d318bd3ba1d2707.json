{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts } from '../actions/blog';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst Dashboard = ({\n  getPosts,\n  blog: {\n    posts\n  }\n}) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, posts.length - page * rowsPerPage);\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: posts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  blog: state.blog\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Dashboard);","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js"],"names":["React","useEffect","makeStyles","getPosts","PropTypes","connect","Paper","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","useStyles","theme","paper","height","display","overflow","flexDirection","Dashboard","blog","posts","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkEC,eAAlE,QAAyF,mBAAzF;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,aAAa,EAAE;AAJV;AADgC,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,SAAS,GAAG,CAAC;AAAEjB,EAAAA,QAAF;AAAYkB,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAlB,CAAD,KAAmC;AAEnD,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBzB,KAAK,CAAC0B,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC5B,KAAK,CAAC0B,QAAN,CAAe,CAAf,CAAtC;;AACA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAFD;;AAGA,QAAMC,uBAAuB,GAAGF,KAAK,IAAI;AACvCF,IAAAA,cAAc,CAACK,QAAQ,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAIA,QAAMW,SAAS,GACbT,WAAW,GAAGU,IAAI,CAACC,GAAL,CAASX,WAAT,EAAsBL,KAAK,CAACiB,MAAN,GAAef,IAAI,GAAGG,WAA5C,CADhB;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEoB,OAAO,CAACR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAEO,KAAK,CAACiB,MAHf;AAIE,IAAA,WAAW,EAAEZ,WAJf;AAKE,IAAA,IAAI,EAAEH,IALR;AAME,IAAA,YAAY,EAAEK,gBANhB;AAOE,IAAA,mBAAmB,EAAEG,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAcD,CAlCD;;AAoCAZ,SAAS,CAACoB,SAAV,GAAsB;AACpBrC,EAAAA,QAAQ,EAAEC,SAAS,CAACqC,IAAV,CAAeC;AADL,CAAtB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCvB,EAAAA,IAAI,EAAEuB,KAAK,CAACvB;AADoB,CAAL,CAA7B;;AAGA,eAAehB,OAAO,CAACsC,eAAD,EAAkB;AAAExC,EAAAA;AAAF,CAAlB,CAAP,CAAuCiB,SAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts } from '../actions/blog';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst Dashboard = ({ getPosts, blog: { posts } }) => {\n\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, posts.length - page * rowsPerPage);\n\n\n  useEffect(() => {\n    getPosts()\n  }, [])\n  return (\n    <Paper className={classes.paper}>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={posts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n  blog: state.blog\n})\nexport default connect(mapStateToProps, { getPosts })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}