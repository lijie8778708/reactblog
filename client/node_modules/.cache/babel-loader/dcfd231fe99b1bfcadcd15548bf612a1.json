{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/markdown/Editor.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\nimport 'prismjs/themes/prism-okaidia.css';\n\nfunction BlankCodeBlock({\n  value\n}) {\n  return /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"language-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, value || '');\n}\n\nfunction CodeBlock({\n  language,\n  value\n}) {\n  // 1. no language was typed\n  // or 2. language doesnt exist\n  if (!language || !Prism.languages[language] || !value) return /*#__PURE__*/React.createElement(BlankCodeBlock, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }\n  });\n  var html = Prism.highlight(value, Prism.languages[language]);\n  var cls = 'language-' + language;\n  return /*#__PURE__*/React.createElement(\"pre\", {\n    className: cls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    },\n    className: cls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst StyledApp = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100vh;\n\n\tdiv {\n\t\tflex: 1;\n\t\tpadding: 10px;\n\t}\n`;\nconst StyledEditor = styled.div`\n\tbackground: #efefef;\n\n\ttextarea {\n\t\twidth: 100%;\n\t\tpadding: 5px;\n\t\theight: 100%;\n\t\tborder-radius: 5px;\n\t\tborder: 1px solid #e2e2e2;\n\t}\n`;\nconst StyledPreview = styled.div`\n\tbackground: #f8f8f8;\n\n\tpre {\n\t\tbackground: #333;\n\t\tcolor: #eee;\n\t\tpadding: 30px;\n\t}\n`;\n\nconst Editor = () => {\n  const [markdown, setMarkdown] = useState(' #sup');\n  return /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: e => setMarkdown(e.target.value),\n    value: markdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: markdown,\n    renderers: {\n      code: CodeBlock\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/markdown/Editor.js"],"names":["React","useState","ReactDOM","styled","ReactMarkdown","Prism","BlankCodeBlock","value","CodeBlock","language","languages","html","highlight","cls","__html","StyledApp","div","StyledEditor","StyledPreview","Editor","markdown","setMarkdown","e","target","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,0BAAP;AACA,OAAO,kCAAP;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAmC;AAC/B,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAAK,IAAI,EAArC,CAAP;AACH;;AAED,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAnB,EAAwC;AACpC;AACA;AACA,MAAI,CAACE,QAAD,IAAa,CAACJ,KAAK,CAACK,SAAN,CAAgBD,QAAhB,CAAd,IAA2C,CAACF,KAAhD,EACI,oBAAO,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEJ,MAAII,IAAI,GAAGN,KAAK,CAACO,SAAN,CAAgBL,KAAhB,EAAuBF,KAAK,CAACK,SAAN,CAAgBD,QAAhB,CAAvB,CAAX;AACA,MAAII,GAAG,GAAG,cAAcJ,QAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEH;AAAV,KAA/B;AAAiD,IAAA,SAAS,EAAEE,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AACD,MAAME,SAAS,GAAGZ,MAAM,CAACa,GAAI;;;;;;;;;CAA7B;AAWA,MAAMC,YAAY,GAAGd,MAAM,CAACa,GAAI;;;;;;;;;;CAAhC;AAYA,MAAME,aAAa,GAAGf,MAAM,CAACa,GAAI;;;;;;;;CAAjC;;AAUA,MAAMG,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,OAAD,CAAxC;AACA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEqB,CAAC,IAAID,WAAW,CAACC,CAAC,CAACC,MAAF,CAAShB,KAAV,CAD9B;AAEI,IAAA,KAAK,EAAEa,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEA,QAAvB;AAAiC,IAAA,SAAS,EAAE;AAAEI,MAAAA,IAAI,EAAEhB;AAAR,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ;AAaH,CAfD;;AAgBA,eAAeW,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\nimport 'prismjs/themes/prism-okaidia.css';\n\nfunction BlankCodeBlock({ value }) {\n    return <pre className=\"language-\">{value || ''}</pre>;\n}\n\nfunction CodeBlock({ language, value }) {\n    // 1. no language was typed\n    // or 2. language doesnt exist\n    if (!language || !Prism.languages[language] || !value)\n        return <BlankCodeBlock value={value} />;\n\n    var html = Prism.highlight(value, Prism.languages[language]);\n    var cls = 'language-' + language;\n\n    return (\n        <pre className={cls}>\n            <code dangerouslySetInnerHTML={{ __html: html }} className={cls} />\n        </pre>\n    );\n}\nconst StyledApp = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100vh;\n\n\tdiv {\n\t\tflex: 1;\n\t\tpadding: 10px;\n\t}\n`;\n\nconst StyledEditor = styled.div`\n\tbackground: #efefef;\n\n\ttextarea {\n\t\twidth: 100%;\n\t\tpadding: 5px;\n\t\theight: 100%;\n\t\tborder-radius: 5px;\n\t\tborder: 1px solid #e2e2e2;\n\t}\n`;\n\nconst StyledPreview = styled.div`\n\tbackground: #f8f8f8;\n\n\tpre {\n\t\tbackground: #333;\n\t\tcolor: #eee;\n\t\tpadding: 30px;\n\t}\n`;\n\nconst Editor = () => {\n    const [markdown, setMarkdown] = useState(' #sup')\n    return (\n        <StyledApp>\n            <StyledEditor>\n                <textarea\n                    onChange={e => setMarkdown(e.target.value)}\n                    value={markdown}\n                />\n            </StyledEditor>\n            <StyledPreview>\n                <ReactMarkdown source={markdown} renderers={{ code: CodeBlock }} />\n            </StyledPreview>\n        </StyledApp>\n    )\n}\nexport default Editor;"]},"metadata":{},"sourceType":"module"}