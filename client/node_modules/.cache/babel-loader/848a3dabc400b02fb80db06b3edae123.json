{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts, removePost, getPost } from '../actions/blog';\nimport { changePage } from '../actions/page';\nimport PropTypes from 'prop-types';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst Dashboard = ({\n  getPosts,\n  getPost,\n  changePage,\n  removePost,\n  blog\n}) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const [open, setOpen] = React.useState(false);\n  const [articleId, setArticleId] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 8));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, blog.posts.length - page * rowsPerPage);\n\n  const postRemove = () => {\n    removePost(articleId);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    postRemove(articleId);\n    setOpen(false);\n  };\n\n  const handleUpdate = id => {\n    getPost(id);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      maxWidth: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, blog.posts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((post, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: JSON.stringify(post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, post.id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      maxWidth: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, post.description), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, post.created), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, post.status), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UpdateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      handleUpdate(post.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 56\n    }\n  }, \"Update\"), \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 56\n    }\n  }, \"Remove\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 8],\n    component: \"div\",\n    count: blog.posts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Remove Article\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"To remove your article, please click the confirm button.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Confirm\"))));\n};\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  removePost: PropTypes.func.isRequired,\n  changePage: PropTypes.func.isRequired,\n  getPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  blog: state.blog\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getPost,\n  removePost,\n  changePage\n})(Dashboard);","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/dashboard/Dashboard.js"],"names":["React","useEffect","makeStyles","getPosts","removePost","getPost","changePage","PropTypes","UpdateIcon","RemoveIcon","connect","Paper","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","useStyles","theme","paper","height","display","overflow","flexDirection","Dashboard","blog","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","open","setOpen","articleId","setArticleId","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","posts","length","postRemove","handleClickOpen","handleClose","handleUpdate","id","maxWidth","slice","map","post","index","JSON","stringify","title","description","created","status","cursor","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPosts, removePost, getPost } from '../actions/blog';\nimport { changePage } from '../actions/page';\nimport PropTypes from 'prop-types';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { connect } from \"react-redux\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TablePagination, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: '800px',\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  }\n}));\n\n\nconst Dashboard = ({ getPosts, getPost, changePage, removePost, blog }) => {\n\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const [open, setOpen] = React.useState(false);\n  const [articleId, setArticleId] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 8));\n    setPage(0);\n  };\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, blog.posts.length - page * rowsPerPage);\n\n  const postRemove = () => {\n    removePost(articleId);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n  const handleClose = () => {\n    postRemove(articleId)\n    setOpen(false);\n  }\n  const handleUpdate = (id) => {\n    getPost(id);\n  }\n\n  useEffect(() => {\n    getPosts()\n  }, [])\n  return (\n    <Paper className={classes.paper}>\n\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell style={{ maxWidth: '250px' }}>Description</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {blog.posts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((post, index) => (\n              <TableRow key={JSON.stringify(post.id)}>\n                <TableCell>{post.id}</TableCell>\n                <TableCell>{post.title}</TableCell>\n                <TableCell style={{ maxWidth: '250px' }}>{post.description}</TableCell>\n                <TableCell align=\"right\">{post.created}</TableCell>\n                <TableCell align=\"right\">{post.status}</TableCell>\n                <TableCell align=\"right\"><UpdateIcon /><Button color=\"primary\" onClick={() => { handleUpdate(post.id) }}>Update</Button> </TableCell>\n                <TableCell align=\"right\"><RemoveIcon /><Button color=\"secondary\" onClick={handleClickOpen}>Remove</Button></TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 8]}\n        component=\"div\"\n        count={blog.posts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          Remove Article\n                </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To remove your article, please click the confirm button.\n                </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n                    </Button>\n\n          <Button color=\"primary\" onClick={handleClose}>\n            Confirm\n                     </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nDashboard.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  removePost: PropTypes.func.isRequired,\n  changePage: PropTypes.func.isRequired,\n  getPost: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n  blog: state.blog\n})\nexport default connect(mapStateToProps, { getPosts, getPost, removePost, changePage })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}