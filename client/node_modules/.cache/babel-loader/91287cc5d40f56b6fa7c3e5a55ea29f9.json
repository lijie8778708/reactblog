{"ast":null,"code":"/*\nLanguage: CSS\nCategory: common\n*/\nmodule.exports = function (hljs) {\n  hljs.LANGUAGES.css = function () {\n    var FUNCTION = {\n      className: 'function',\n      begin: hljs.IDENT_RE + '\\\\(',\n      end: '\\\\)',\n      contains: [{\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [hljs.NUMBER_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n      }]\n    };\n    return {\n      case_insensitive: true,\n      defaultMode: {\n        illegal: '[=/|\\']',\n        contains: [hljs.C_BLOCK_COMMENT_MODE, {\n          className: 'id',\n          begin: '\\\\#[A-Za-z0-9_-]+'\n        }, {\n          className: 'class',\n          begin: '\\\\.[A-Za-z0-9_-]+',\n          relevance: 0\n        }, {\n          className: 'attr_selector',\n          begin: '\\\\[',\n          end: '\\\\]',\n          illegal: '$'\n        }, {\n          className: 'pseudo',\n          begin: ':(:)?[a-zA-Z0-9\\\\_\\\\-\\\\+\\\\(\\\\)\\\\\"\\\\\\']+'\n        }, {\n          className: 'at_rule',\n          begin: '@font-face',\n          lexems: '[a-z-]+',\n          keywords: {\n            'font-face': 1\n          }\n        }, {\n          className: 'at_rule',\n          begin: '@',\n          end: '[{;]',\n          // at_rule eating first \"{\" is a good thing\n          // because it doesn't let it to be parsed as\n          // a rule set but instead drops parser into\n          // the defaultMode which is how it should be.\n          excludeEnd: true,\n          keywords: {\n            'import': 1,\n            'page': 1,\n            'media': 1,\n            'charset': 1\n          },\n          contains: [FUNCTION, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE]\n        }, {\n          className: 'tag',\n          begin: hljs.IDENT_RE,\n          relevance: 0\n        }, {\n          className: 'rules',\n          begin: '{',\n          end: '}',\n          illegal: '[^\\\\s]',\n          relevance: 0,\n          contains: [hljs.C_BLOCK_COMMENT_MODE, {\n            className: 'rule',\n            begin: '[^\\\\s]',\n            returnBegin: true,\n            end: ';',\n            endsWithParent: true,\n            contains: [{\n              className: 'attribute',\n              begin: '[A-Z\\\\_\\\\.\\\\-]+',\n              end: ':',\n              excludeEnd: true,\n              illegal: '[^\\\\s]',\n              starts: {\n                className: 'value',\n                endsWithParent: true,\n                excludeEnd: true,\n                contains: [FUNCTION, hljs.NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n                  className: 'hexcolor',\n                  begin: '\\\\#[0-9A-F]+'\n                }, {\n                  className: 'important',\n                  begin: '!important'\n                }]\n              }\n            }]\n          }]\n        }]\n      }\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/node_modules/highlight/lib/vendor/highlight.js/languages/css.js"],"names":["module","exports","hljs","LANGUAGES","css","FUNCTION","className","begin","IDENT_RE","end","contains","endsWithParent","excludeEnd","NUMBER_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","case_insensitive","defaultMode","illegal","C_BLOCK_COMMENT_MODE","relevance","lexems","keywords","returnBegin","starts"],"mappings":"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","sourcesContent":["/*\nLanguage: CSS\nCategory: common\n*/\nmodule.exports = function(hljs){\nhljs.LANGUAGES.css = function() {\n  var FUNCTION = {\n    className: 'function',\n    begin: hljs.IDENT_RE + '\\\\(', end: '\\\\)',\n    contains: [{\n        endsWithParent: true, excludeEnd: true,\n        contains: [hljs.NUMBER_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n    }]\n  };\n  return {\n    case_insensitive: true,\n    defaultMode: {\n      illegal: '[=/|\\']',\n      contains: [\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'id', begin: '\\\\#[A-Za-z0-9_-]+'\n        },\n        {\n          className: 'class', begin: '\\\\.[A-Za-z0-9_-]+',\n          relevance: 0\n        },\n        {\n          className: 'attr_selector',\n          begin: '\\\\[', end: '\\\\]',\n          illegal: '$'\n        },\n        {\n          className: 'pseudo',\n          begin: ':(:)?[a-zA-Z0-9\\\\_\\\\-\\\\+\\\\(\\\\)\\\\\"\\\\\\']+'\n        },\n        {\n          className: 'at_rule',\n          begin: '@font-face',\n          lexems: '[a-z-]+',\n          keywords: {'font-face': 1}\n        },\n        {\n          className: 'at_rule',\n          begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                   // because it doesn't let it to be parsed as\n                                   // a rule set but instead drops parser into\n                                   // the defaultMode which is how it should be.\n          excludeEnd: true,\n          keywords: {'import': 1, 'page': 1, 'media': 1, 'charset': 1},\n          contains: [\n            FUNCTION,\n            hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n            hljs.NUMBER_MODE\n          ]\n        },\n        {\n          className: 'tag', begin: hljs.IDENT_RE,\n          relevance: 0\n        },\n        {\n          className: 'rules',\n          begin: '{', end: '}',\n          illegal: '[^\\\\s]',\n          relevance: 0,\n          contains: [\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'rule',\n              begin: '[^\\\\s]', returnBegin: true, end: ';', endsWithParent: true,\n              contains: [\n                {\n                  className: 'attribute',\n                  begin: '[A-Z\\\\_\\\\.\\\\-]+', end: ':',\n                  excludeEnd: true,\n                  illegal: '[^\\\\s]',\n                  starts: {\n                    className: 'value',\n                    endsWithParent: true, excludeEnd: true,\n                    contains: [\n                      FUNCTION,\n                      hljs.NUMBER_MODE,\n                      hljs.QUOTE_STRING_MODE,\n                      hljs.APOS_STRING_MODE,\n                      hljs.C_BLOCK_COMMENT_MODE,\n                      {\n                        className: 'hexcolor', begin: '\\\\#[0-9A-F]+'\n                      },\n                      {\n                        className: 'important', begin: '!important'\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  };\n}();\n};"]},"metadata":{},"sourceType":"script"}