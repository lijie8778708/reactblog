{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { GET_POSTS, POST_ERROR, GET_POST, ADD_POST, CURRENT_PAGE, DELETE_POST, UPDATE_POST } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/blogs\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\nexport const getPost = (id, page) => async dispatch => {\n  try {\n    const res = await axios.get(`/blog/${id}`);\n    console.log(res.data);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n\n    if (page) {\n      dispatch({\n        type: CURRENT_PAGE,\n        payload: 2\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\nexport const removePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/removeBlog/${id}`);\n    console.log(res.data);\n    dispatch({\n      type: DELETE_POST,\n      payload: null\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\nexport const newPost = ({\n  title,\n  description,\n  content\n}) => async dispatch => {\n  try {\n    const res = await axios.post(\"/blog/edit\", {\n      title: title,\n      description: description,\n      content: content\n    });\n    dispatch({\n      type: ADD_POST\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};\nexport const updatePost = ({\n  id,\n  title,\n  description,\n  content\n}) => async dispatch => {\n  try {\n    const res = await axios.post(`/blog/edit/`, {\n      id: id,\n      title: title,\n      description: description,\n      content: content\n    });\n    dispatch({\n      type: UPDATE_POST\n    });\n    dispatch({\n      type: CURRENT_PAGE,\n      payload: 0\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/actions/blog.js"],"names":["React","axios","GET_POSTS","POST_ERROR","GET_POST","ADD_POST","CURRENT_PAGE","DELETE_POST","UPDATE_POST","getPosts","dispatch","res","get","type","payload","data","err","getPost","id","page","console","log","removePost","delete","newPost","title","description","content","post","updatePost"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { GET_POSTS, POST_ERROR, GET_POST, ADD_POST, CURRENT_PAGE, DELETE_POST, UPDATE_POST } from './types';\n\n\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get(\"/blogs\");\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR\n        })\n    }\n}\n\nexport const getPost = (id, page) => async dispatch => {\n    try {\n        const res = await axios.get(`/blog/${id}`)\n        console.log(res.data);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n        if (page) {\n            dispatch({\n                type: CURRENT_PAGE,\n                payload: 2\n            })\n        }\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR\n        })\n    }\n}\n\nexport const removePost = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`/removeBlog/${id}`)\n        console.log(res.data);\n        dispatch({\n            type: DELETE_POST,\n            payload: null\n        })\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR\n        })\n    }\n}\n\nexport const newPost = ({ title, description, content }) => async dispatch => {\n    try {\n        const res = await axios.post(\"/blog/edit\", {\n            title: title,\n            description: description,\n            content: content\n        })\n        dispatch({\n            type: ADD_POST,\n        })\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR\n        })\n    }\n}\n\nexport const updatePost = ({ id, title, description, content }) => async dispatch => {\n    try {\n        const res = await axios.post(`/blog/edit/`, {\n            id: id,\n            title: title,\n            description: description,\n            content: content\n        })\n        dispatch({\n            type: UPDATE_POST,\n        })\n        dispatch({\n            type: CURRENT_PAGE,\n            payload: 0\n        })\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}