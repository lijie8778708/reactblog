{"ast":null,"code":"/*\nSyntax highlighting with language autodetection.\nhttp://softwaremaniacs.org/soft/highlight/\n*/\nvar hljs = module.exports.hljs = new function () {\n  /* Utility functions */\n  function escape(value) {\n    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;');\n  }\n\n  function langRe(language, value, global) {\n    return RegExp(value, 'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : ''));\n  }\n\n  function findCode(pre) {\n    for (var i = 0; i < pre.childNodes.length; i++) {\n      var node = pre.childNodes[i];\n      if (node.nodeName == 'CODE') return node;\n      if (!(node.nodeType == 3 && node.nodeValue.match(/\\s+/))) break;\n    }\n  }\n\n  function blockText(block, ignoreNewLines) {\n    var result = '';\n\n    for (var i = 0; i < block.childNodes.length; i++) if (block.childNodes[i].nodeType == 3) {\n      var chunk = block.childNodes[i].nodeValue;\n      if (ignoreNewLines) chunk = chunk.replace(/\\n/g, '');\n      result += chunk;\n    } else if (block.childNodes[i].nodeName == 'BR') result += '\\n';else result += blockText(block.childNodes[i]); // Thank you, MSIE...\n\n\n    if (/MSIE [678]/.test(navigator.userAgent)) result = result.replace(/\\r/g, '\\n');\n    return result;\n  }\n\n  function blockLanguage(block) {\n    var classes = block.className.split(/\\s+/);\n    classes = classes.concat(block.parentNode.className.split(/\\s+/));\n\n    for (var i = 0; i < classes.length; i++) {\n      var class_ = classes[i].replace(/^language-/, '');\n\n      if (languages[class_] || class_ == 'no-highlight') {\n        return class_;\n      }\n    }\n  }\n  /* Stream merging */\n\n\n  function nodeStream(node) {\n    var result = [];\n\n    (function (node, offset) {\n      for (var i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].nodeType == 3) offset += node.childNodes[i].nodeValue.length;else if (node.childNodes[i].nodeName == 'BR') offset += 1;else {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: node.childNodes[i]\n          });\n          offset = arguments.callee(node.childNodes[i], offset);\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: node.childNodes[i]\n          });\n        }\n      }\n\n      return offset;\n    })(node, 0);\n\n    return result;\n  }\n\n  function mergeStreams(stream1, stream2, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (stream1.length && stream2.length) {\n        if (stream1[0].offset != stream2[0].offset) return stream1[0].offset < stream2[0].offset ? stream1 : stream2;else {\n          /*\n          To avoid starting the stream just before it should stop the order is\n          ensured that stream1 always starts first and closes last:\n           if (event1 == 'start' && event2 == 'start')\n            return stream1;\n          if (event1 == 'start' && event2 == 'stop')\n            return stream2;\n          if (event1 == 'stop' && event2 == 'start')\n            return stream1;\n          if (event1 == 'stop' && event2 == 'stop')\n            return stream2;\n           ... which is collapsed to:\n          */\n          return stream2[0].event == 'start' ? stream1 : stream2;\n        }\n      } else {\n        return stream1.length ? stream1 : stream2;\n      }\n    }\n\n    function open(node) {\n      var result = '<' + node.nodeName.toLowerCase();\n\n      for (var i = 0; i < node.attributes.length; i++) {\n        var attribute = node.attributes[i];\n        result += ' ' + attribute.nodeName.toLowerCase();\n\n        if (attribute.nodeValue != undefined) {\n          result += '=\"' + escape(attribute.nodeValue) + '\"';\n        }\n      }\n\n      return result + '>';\n    }\n\n    while (stream1.length || stream2.length) {\n      var current = selectStream().splice(0, 1)[0];\n      result += escape(value.substr(processed, current.offset - processed));\n      processed = current.offset;\n\n      if (current.event == 'start') {\n        result += open(current.node);\n        nodeStack.push(current.node);\n      } else if (current.event == 'stop') {\n        var i = nodeStack.length;\n\n        do {\n          i--;\n          var node = nodeStack[i];\n          result += '</' + node.nodeName.toLowerCase() + '>';\n        } while (node != current.node);\n\n        nodeStack.splice(i, 1);\n\n        while (i < nodeStack.length) {\n          result += open(nodeStack[i]);\n          i++;\n        }\n      }\n    }\n\n    result += value.substr(processed);\n    return result;\n  }\n  /* Core highlighting function */\n\n\n  function highlight(language_name, value) {\n    function subMode(lexem, mode) {\n      for (var i = 0; i < mode.contains.length; i++) {\n        if (mode.contains[i].beginRe.test(lexem)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode_index, lexem) {\n      if (modes[mode_index].end && modes[mode_index].endRe.test(lexem)) return 1;\n\n      if (modes[mode_index].endsWithParent) {\n        var level = endOfMode(mode_index - 1, lexem);\n        return level ? level + 1 : 0;\n      }\n\n      return 0;\n    }\n\n    function isIllegal(lexem, mode) {\n      return mode.illegalRe && mode.illegalRe.test(lexem);\n    }\n\n    function compileTerminators(mode, language) {\n      var terminators = [];\n\n      for (var i = 0; i < mode.contains.length; i++) {\n        terminators.push(mode.contains[i].begin);\n      }\n\n      var index = modes.length - 1;\n\n      do {\n        if (modes[index].end) {\n          terminators.push(modes[index].end);\n        }\n\n        index--;\n      } while (modes[index + 1].endsWithParent);\n\n      if (mode.illegal) {\n        terminators.push(mode.illegal);\n      }\n\n      return langRe(language, '(' + terminators.join('|') + ')', true);\n    }\n\n    function eatModeChunk(value, index) {\n      var mode = modes[modes.length - 1];\n\n      if (!mode.terminators) {\n        mode.terminators = compileTerminators(mode, language);\n      }\n\n      mode.terminators.lastIndex = index;\n      var match = mode.terminators.exec(value);\n      if (match) return [value.substr(index, match.index - index), match[0], false];else return [value.substr(index), '', true];\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n\n      for (var className in mode.keywordGroups) {\n        if (!mode.keywordGroups.hasOwnProperty(className)) continue;\n        var value = mode.keywordGroups[className].hasOwnProperty(match_str);\n        if (value) return [className, value];\n      }\n\n      return false;\n    }\n\n    function processKeywords(buffer, mode) {\n      if (!mode.keywords) return escape(buffer);\n      var result = '';\n      var last_index = 0;\n      mode.lexemsRe.lastIndex = 0;\n      var match = mode.lexemsRe.exec(buffer);\n\n      while (match) {\n        result += escape(buffer.substr(last_index, match.index - last_index));\n        var keyword_match = keywordMatch(mode, match);\n\n        if (keyword_match) {\n          keyword_count += keyword_match[1];\n          result += '<span class=\"' + keyword_match[0] + '\">' + escape(match[0]) + '</span>';\n        } else {\n          result += escape(match[0]);\n        }\n\n        last_index = mode.lexemsRe.lastIndex;\n        match = mode.lexemsRe.exec(buffer);\n      }\n\n      result += escape(buffer.substr(last_index, buffer.length - last_index));\n      return result;\n    }\n\n    function processBuffer(buffer, mode) {\n      if (mode.subLanguage && languages[mode.subLanguage]) {\n        var result = highlight(mode.subLanguage, buffer);\n        keyword_count += result.keyword_count;\n        return result.value;\n      } else {\n        return processKeywords(buffer, mode);\n      }\n    }\n\n    function startNewMode(mode, lexem) {\n      var markup = mode.className ? '<span class=\"' + mode.className + '\">' : '';\n\n      if (mode.returnBegin) {\n        result += markup;\n        mode.buffer = '';\n      } else if (mode.excludeBegin) {\n        result += escape(lexem) + markup;\n        mode.buffer = '';\n      } else {\n        result += markup;\n        mode.buffer = lexem;\n      }\n\n      modes.push(mode);\n      relevance += mode.relevance;\n    }\n\n    function processModeInfo(buffer, lexem, end) {\n      var current_mode = modes[modes.length - 1];\n\n      if (end) {\n        result += processBuffer(current_mode.buffer + buffer, current_mode);\n        return false;\n      }\n\n      var new_mode = subMode(lexem, current_mode);\n\n      if (new_mode) {\n        result += processBuffer(current_mode.buffer + buffer, current_mode);\n        startNewMode(new_mode, lexem);\n        return new_mode.returnBegin;\n      }\n\n      var end_level = endOfMode(modes.length - 1, lexem);\n\n      if (end_level) {\n        var markup = current_mode.className ? '</span>' : '';\n\n        if (current_mode.returnEnd) {\n          result += processBuffer(current_mode.buffer + buffer, current_mode) + markup;\n        } else if (current_mode.excludeEnd) {\n          result += processBuffer(current_mode.buffer + buffer, current_mode) + markup + escape(lexem);\n        } else {\n          result += processBuffer(current_mode.buffer + buffer + lexem, current_mode) + markup;\n        }\n\n        while (end_level > 1) {\n          markup = modes[modes.length - 2].className ? '</span>' : '';\n          result += markup;\n          end_level--;\n          modes.length--;\n        }\n\n        var last_ended_mode = modes[modes.length - 1];\n        modes.length--;\n        modes[modes.length - 1].buffer = '';\n\n        if (last_ended_mode.starts) {\n          startNewMode(last_ended_mode.starts, '');\n        }\n\n        return current_mode.returnEnd;\n      }\n\n      if (isIllegal(lexem, current_mode)) throw 'Illegal';\n    }\n\n    var language = languages[language_name];\n    var modes = [language.defaultMode];\n    var relevance = 0;\n    var keyword_count = 0;\n    var result = '';\n\n    try {\n      var index = 0;\n      language.defaultMode.buffer = '';\n\n      do {\n        var mode_info = eatModeChunk(value, index);\n        var return_lexem = processModeInfo(mode_info[0], mode_info[1], mode_info[2]);\n        index += mode_info[0].length;\n\n        if (!return_lexem) {\n          index += mode_info[1].length;\n        }\n      } while (!mode_info[2]);\n\n      if (modes.length > 1) throw 'Illegal';\n      return {\n        language: language_name,\n        relevance: relevance,\n        keyword_count: keyword_count,\n        value: result\n      };\n    } catch (e) {\n      if (e == 'Illegal') {\n        return {\n          language: null,\n          relevance: 0,\n          keyword_count: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n  /* Initialization */\n\n\n  function compileModes() {\n    function compileMode(mode, language, is_default) {\n      if (mode.compiled) return;\n\n      if (!is_default) {\n        mode.beginRe = langRe(language, mode.begin ? mode.begin : '\\\\B|\\\\b');\n        if (!mode.end && !mode.endsWithParent) mode.end = '\\\\B|\\\\b';\n        if (mode.end) mode.endRe = langRe(language, mode.end);\n      }\n\n      if (mode.illegal) mode.illegalRe = langRe(language, mode.illegal);\n      if (mode.relevance == undefined) mode.relevance = 1;\n      if (mode.keywords) mode.lexemsRe = langRe(language, mode.lexems || hljs.IDENT_RE, true);\n\n      for (var key in mode.keywords) {\n        if (!mode.keywords.hasOwnProperty(key)) continue;\n        if (mode.keywords[key] instanceof Object) mode.keywordGroups = mode.keywords;else mode.keywordGroups = {\n          'keyword': mode.keywords\n        };\n        break;\n      }\n\n      if (!mode.contains) {\n        mode.contains = [];\n      } // compiled flag is set before compiling submodes to avoid self-recursion\n      // (see lisp where quoted_list contains quoted_list)\n\n\n      mode.compiled = true;\n\n      for (var i = 0; i < mode.contains.length; i++) {\n        compileMode(mode.contains[i], language, false);\n      }\n\n      if (mode.starts) {\n        compileMode(mode.starts, language, false);\n      }\n    }\n\n    for (var i in languages) {\n      if (!languages.hasOwnProperty(i)) continue;\n      compileMode(languages[i].defaultMode, languages[i], true);\n    }\n  }\n\n  function initialize() {\n    if (initialize.called) return;\n    initialize.called = true;\n    compileModes();\n  }\n  /* Public library functions */\n\n\n  function highlightBlock(block, tabReplace, useBR) {\n    initialize();\n    var text = blockText(block, useBR);\n    var language = blockLanguage(block);\n    if (language == 'no-highlight') return;\n\n    if (language) {\n      var result = highlight(language, text);\n    } else {\n      var result = {\n        language: '',\n        keyword_count: 0,\n        relevance: 0,\n        value: escape(text)\n      };\n      var second_best = result;\n\n      for (var key in languages) {\n        if (!languages.hasOwnProperty(key)) continue;\n        var current = highlight(key, text);\n\n        if (current.keyword_count + current.relevance > second_best.keyword_count + second_best.relevance) {\n          second_best = current;\n        }\n\n        if (current.keyword_count + current.relevance > result.keyword_count + result.relevance) {\n          second_best = result;\n          result = current;\n        }\n      }\n    }\n\n    var class_name = block.className;\n\n    if (!class_name.match(result.language)) {\n      class_name = class_name ? class_name + ' ' + result.language : result.language;\n    }\n\n    var original = nodeStream(block);\n\n    if (original.length) {\n      var pre = document.createElement('pre');\n      pre.innerHTML = result.value;\n      result.value = mergeStreams(original, nodeStream(pre), text);\n    }\n\n    if (tabReplace) {\n      result.value = result.value.replace(/^((<[^>]+>|\\t)+)/gm, function (match, p1, offset, s) {\n        return p1.replace(/\\t/g, tabReplace);\n      });\n    }\n\n    if (useBR) {\n      result.value = result.value.replace(/\\n/g, '<br>');\n    }\n\n    if (/MSIE [678]/.test(navigator.userAgent) && block.tagName == 'CODE' && block.parentNode.tagName == 'PRE') {\n      // This is for backwards compatibility only. IE needs this strange\n      // hack becasue it cannot just cleanly replace <code> block contents.\n      var pre = block.parentNode;\n      var container = document.createElement('div');\n      container.innerHTML = '<pre><code>' + result.value + '</code></pre>';\n      block = container.firstChild.firstChild;\n      container.firstChild.className = pre.className;\n      pre.parentNode.replaceChild(container.firstChild, pre);\n    } else {\n      block.innerHTML = result.value;\n    }\n\n    block.className = class_name;\n    block.dataset = {};\n    block.dataset.result = {\n      language: result.language,\n      kw: result.keyword_count,\n      re: result.relevance\n    };\n\n    if (second_best && second_best.language) {\n      block.dataset.second_best = {\n        language: second_best.language,\n        kw: second_best.keyword_count,\n        re: second_best.relevance\n      };\n    }\n  }\n\n  function highlightText(block, tabReplace, useBR) {\n    initialize();\n    var text = block;\n    var language;\n    var result = {\n      language: '',\n      keyword_count: 0,\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n\n    for (var key in languages) {\n      if (!languages.hasOwnProperty(key)) continue;\n      var current = highlight(key, text);\n\n      if (current.keyword_count + current.relevance > second_best.keyword_count + second_best.relevance) {\n        second_best = current;\n      }\n\n      if (current.keyword_count + current.relevance > result.keyword_count + result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    }\n\n    if (tabReplace) {\n      result.value = result.value.replace(/^((<[^>]+>|\\t)+)/gm, function (match, p1, offset, s) {\n        return p1.replace(/\\t/g, tabReplace);\n      });\n    }\n\n    if (useBR) {\n      result.value = result.value.replace(/\\n/g, '<br>');\n    }\n\n    return result.value;\n  }\n\n  function initHighlighting() {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n    initialize();\n    var pres = document.getElementsByTagName('pre');\n\n    for (var i = 0; i < pres.length; i++) {\n      var code = findCode(pres[i]);\n      if (code) highlightBlock(code, hljs.tabReplace);\n    }\n  }\n\n  function initHighlightingOnLoad() {\n    var original_arguments = arguments;\n\n    var handler = function () {\n      initHighlighting.apply(null, original_arguments);\n    };\n\n    if (window.addEventListener) {\n      window.addEventListener('DOMContentLoaded', handler, false);\n      window.addEventListener('load', handler, false);\n    } else if (window.attachEvent) window.attachEvent('onload', handler);else window.onload = handler;\n  }\n\n  var languages = {}; // a shortcut to avoid writing \"this.\" everywhere\n\n  /* Interface definition */\n\n  this.LANGUAGES = languages;\n  this.initHighlightingOnLoad = initHighlightingOnLoad;\n  this.highlightBlock = highlightBlock;\n  this.initHighlighting = initHighlighting;\n  this.highlightText = highlightText; // Common regexps\n\n  this.IDENT_RE = '[a-zA-Z][a-zA-Z0-9_]*';\n  this.UNDERSCORE_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*';\n  this.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  this.C_NUMBER_RE = '\\\\b(0x[A-Za-z0-9]+|\\\\d+(\\\\.\\\\d+)?)';\n  this.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|\\\\.|-|-=|/|/=|:|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~'; // Common modes\n\n  this.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\.',\n    relevance: 0\n  };\n  this.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n',\n    contains: [this.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n  this.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n',\n    contains: [this.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n  this.C_LINE_COMMENT_MODE = {\n    className: 'comment',\n    begin: '//',\n    end: '$'\n  };\n  this.C_BLOCK_COMMENT_MODE = {\n    className: 'comment',\n    begin: '/\\\\*',\n    end: '\\\\*/'\n  };\n  this.HASH_COMMENT_MODE = {\n    className: 'comment',\n    begin: '#',\n    end: '$'\n  };\n  this.NUMBER_MODE = {\n    className: 'number',\n    begin: this.NUMBER_RE,\n    relevance: 0\n  };\n  this.C_NUMBER_MODE = {\n    className: 'number',\n    begin: this.C_NUMBER_RE,\n    relevance: 0\n  }; // Utility functions\n\n  this.inherit = function (parent, obj) {\n    var result = {};\n\n    for (var key in parent) result[key] = parent[key];\n\n    if (obj) for (var key in obj) result[key] = obj[key];\n    return result;\n  };\n}();","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/node_modules/highlight/lib/vendor/highlight.js/highlight.js"],"names":["hljs","module","exports","escape","value","replace","langRe","language","global","RegExp","case_insensitive","findCode","pre","i","childNodes","length","node","nodeName","nodeType","nodeValue","match","blockText","block","ignoreNewLines","result","chunk","test","navigator","userAgent","blockLanguage","classes","className","split","concat","parentNode","class_","languages","nodeStream","offset","push","event","arguments","callee","mergeStreams","stream1","stream2","processed","nodeStack","selectStream","open","toLowerCase","attributes","attribute","undefined","current","splice","substr","highlight","language_name","subMode","lexem","mode","contains","beginRe","endOfMode","mode_index","modes","end","endRe","endsWithParent","level","isIllegal","illegalRe","compileTerminators","terminators","begin","index","illegal","join","eatModeChunk","lastIndex","exec","keywordMatch","match_str","keywordGroups","hasOwnProperty","processKeywords","buffer","keywords","last_index","lexemsRe","keyword_match","keyword_count","processBuffer","subLanguage","startNewMode","markup","returnBegin","excludeBegin","relevance","processModeInfo","current_mode","new_mode","end_level","returnEnd","excludeEnd","last_ended_mode","starts","defaultMode","mode_info","return_lexem","e","compileModes","compileMode","is_default","compiled","lexems","IDENT_RE","key","Object","initialize","called","highlightBlock","tabReplace","useBR","text","second_best","class_name","original","document","createElement","innerHTML","p1","s","tagName","container","firstChild","replaceChild","dataset","kw","re","highlightText","initHighlighting","pres","getElementsByTagName","code","initHighlightingOnLoad","original_arguments","handler","apply","window","addEventListener","attachEvent","onload","LANGUAGES","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","inherit","parent","obj"],"mappings":"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","sourcesContent":["/*\nSyntax highlighting with language autodetection.\nhttp://softwaremaniacs.org/soft/highlight/\n*/\n\nvar hljs = module.exports.hljs = new function() {\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;');\n  }\n\n  function langRe(language, value, global) {\n    return RegExp(\n      value,\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  function findCode(pre) {\n    for (var i = 0; i < pre.childNodes.length; i++) {\n      var node = pre.childNodes[i];\n      if (node.nodeName == 'CODE')\n        return node;\n      if (!(node.nodeType == 3 && node.nodeValue.match(/\\s+/)))\n        break;\n    }\n  }\n\n  function blockText(block, ignoreNewLines) {\n    var result = '';\n    for (var i = 0; i < block.childNodes.length; i++)\n      if (block.childNodes[i].nodeType == 3) {\n        var chunk = block.childNodes[i].nodeValue;\n        if (ignoreNewLines)\n          chunk = chunk.replace(/\\n/g, '');\n        result += chunk;\n      } else if (block.childNodes[i].nodeName == 'BR')\n        result += '\\n';\n      else\n        result += blockText(block.childNodes[i]);\n    // Thank you, MSIE...\n    if (/MSIE [678]/.test(navigator.userAgent))\n      result = result.replace(/\\r/g, '\\n');\n    return result;\n  }\n\n  function blockLanguage(block) {\n    var classes = block.className.split(/\\s+/)\n    classes = classes.concat(block.parentNode.className.split(/\\s+/));\n    for (var i = 0; i < classes.length; i++) {\n      var class_ = classes[i].replace(/^language-/, '');\n      if (languages[class_] || class_ == 'no-highlight') {\n        return class_;\n      }\n    }\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function (node, offset) {\n      for (var i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].nodeType == 3)\n          offset += node.childNodes[i].nodeValue.length;\n        else if (node.childNodes[i].nodeName == 'BR')\n          offset += 1\n        else {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: node.childNodes[i]\n          });\n          offset = arguments.callee(node.childNodes[i], offset)\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: node.childNodes[i]\n          });\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(stream1, stream2, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (stream1.length && stream2.length) {\n        if (stream1[0].offset != stream2[0].offset)\n          return (stream1[0].offset < stream2[0].offset) ? stream1 : stream2;\n        else {\n          /*\n          To avoid starting the stream just before it should stop the order is\n          ensured that stream1 always starts first and closes last:\n\n          if (event1 == 'start' && event2 == 'start')\n            return stream1;\n          if (event1 == 'start' && event2 == 'stop')\n            return stream2;\n          if (event1 == 'stop' && event2 == 'start')\n            return stream1;\n          if (event1 == 'stop' && event2 == 'stop')\n            return stream2;\n\n          ... which is collapsed to:\n          */\n          return stream2[0].event == 'start' ? stream1 : stream2;\n        }\n      } else {\n        return stream1.length ? stream1 : stream2;\n      }\n    }\n\n    function open(node) {\n      var result = '<' + node.nodeName.toLowerCase();\n      for (var i = 0; i < node.attributes.length; i++) {\n        var attribute = node.attributes[i];\n        result += ' ' + attribute.nodeName.toLowerCase();\n        if (attribute.nodeValue != undefined) {\n          result += '=\"' + escape(attribute.nodeValue) + '\"';\n        }\n      }\n      return result + '>';\n    }\n\n    while (stream1.length || stream2.length) {\n      var current = selectStream().splice(0, 1)[0];\n      result += escape(value.substr(processed, current.offset - processed));\n      processed = current.offset;\n      if ( current.event == 'start') {\n        result += open(current.node);\n        nodeStack.push(current.node);\n      } else if (current.event == 'stop') {\n        var i = nodeStack.length;\n        do {\n          i--;\n          var node = nodeStack[i];\n          result += ('</' + node.nodeName.toLowerCase() + '>');\n        } while (node != current.node);\n        nodeStack.splice(i, 1);\n        while (i < nodeStack.length) {\n          result += open(nodeStack[i]);\n          i++;\n        }\n      }\n    }\n    result += value.substr(processed);\n    return result;\n  }\n\n  /* Core highlighting function */\n\n  function highlight(language_name, value) {\n\n    function subMode(lexem, mode) {\n      for (var i = 0; i < mode.contains.length; i++) {\n        if (mode.contains[i].beginRe.test(lexem)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode_index, lexem) {\n      if (modes[mode_index].end && modes[mode_index].endRe.test(lexem))\n        return 1;\n      if (modes[mode_index].endsWithParent) {\n        var level = endOfMode(mode_index - 1, lexem);\n        return level ? level + 1 : 0;\n      }\n      return 0;\n    }\n\n    function isIllegal(lexem, mode) {\n      return mode.illegalRe && mode.illegalRe.test(lexem);\n    }\n\n    function compileTerminators(mode, language) {\n      var terminators = [];\n\n      for (var i = 0; i < mode.contains.length; i++) {\n        terminators.push(mode.contains[i].begin);\n      }\n\n      var index = modes.length - 1;\n      do {\n        if (modes[index].end) {\n          terminators.push(modes[index].end);\n        }\n        index--;\n      } while (modes[index + 1].endsWithParent);\n\n      if (mode.illegal) {\n        terminators.push(mode.illegal);\n      }\n\n      return langRe(language, '(' + terminators.join('|') + ')', true);\n    }\n\n    function eatModeChunk(value, index) {\n      var mode = modes[modes.length - 1];\n      if (!mode.terminators) {\n        mode.terminators = compileTerminators(mode, language);\n      }\n      mode.terminators.lastIndex = index;\n      var match = mode.terminators.exec(value);\n      if (match)\n        return [value.substr(index, match.index - index), match[0], false];\n      else\n        return [value.substr(index), '', true];\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0]\n      for (var className in mode.keywordGroups) {\n        if (!mode.keywordGroups.hasOwnProperty(className))\n          continue;\n        var value = mode.keywordGroups[className].hasOwnProperty(match_str);\n        if (value)\n          return [className, value];\n      }\n      return false;\n    }\n\n    function processKeywords(buffer, mode) {\n      if (!mode.keywords)\n        return escape(buffer);\n      var result = '';\n      var last_index = 0;\n      mode.lexemsRe.lastIndex = 0;\n      var match = mode.lexemsRe.exec(buffer);\n      while (match) {\n        result += escape(buffer.substr(last_index, match.index - last_index));\n        var keyword_match = keywordMatch(mode, match);\n        if (keyword_match) {\n          keyword_count += keyword_match[1];\n          result += '<span class=\"'+ keyword_match[0] +'\">' + escape(match[0]) + '</span>';\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = mode.lexemsRe.lastIndex;\n        match = mode.lexemsRe.exec(buffer);\n      }\n      result += escape(buffer.substr(last_index, buffer.length - last_index));\n      return result;\n    }\n\n    function processBuffer(buffer, mode) {\n      if (mode.subLanguage && languages[mode.subLanguage]) {\n        var result = highlight(mode.subLanguage, buffer);\n        keyword_count += result.keyword_count;\n        return result.value;\n      } else {\n        return processKeywords(buffer, mode);\n      }\n    }\n\n    function startNewMode(mode, lexem) {\n      var markup = mode.className?'<span class=\"' + mode.className + '\">':'';\n      if (mode.returnBegin) {\n        result += markup;\n        mode.buffer = '';\n      } else if (mode.excludeBegin) {\n        result += escape(lexem) + markup;\n        mode.buffer = '';\n      } else {\n        result += markup;\n        mode.buffer = lexem;\n      }\n      modes.push(mode);\n      relevance += mode.relevance;\n    }\n\n    function processModeInfo(buffer, lexem, end) {\n      var current_mode = modes[modes.length - 1];\n      if (end) {\n        result += processBuffer(current_mode.buffer + buffer, current_mode);\n        return false;\n      }\n\n      var new_mode = subMode(lexem, current_mode);\n      if (new_mode) {\n        result += processBuffer(current_mode.buffer + buffer, current_mode);\n        startNewMode(new_mode, lexem);\n        return new_mode.returnBegin;\n      }\n\n      var end_level = endOfMode(modes.length - 1, lexem);\n      if (end_level) {\n        var markup = current_mode.className?'</span>':'';\n        if (current_mode.returnEnd) {\n          result += processBuffer(current_mode.buffer + buffer, current_mode) + markup;\n        } else if (current_mode.excludeEnd) {\n          result += processBuffer(current_mode.buffer + buffer, current_mode) + markup + escape(lexem);\n        } else {\n          result += processBuffer(current_mode.buffer + buffer + lexem, current_mode) + markup;\n        }\n        while (end_level > 1) {\n          markup = modes[modes.length - 2].className?'</span>':'';\n          result += markup;\n          end_level--;\n          modes.length--;\n        }\n        var last_ended_mode = modes[modes.length - 1];\n        modes.length--;\n        modes[modes.length - 1].buffer = '';\n        if (last_ended_mode.starts) {\n          startNewMode(last_ended_mode.starts, '');\n        }\n        return current_mode.returnEnd;\n      }\n\n      if (isIllegal(lexem, current_mode))\n        throw 'Illegal';\n    }\n\n    var language = languages[language_name];\n    var modes = [language.defaultMode];\n    var relevance = 0;\n    var keyword_count = 0;\n    var result = '';\n    try {\n      var index = 0;\n      language.defaultMode.buffer = '';\n      do {\n        var mode_info = eatModeChunk(value, index);\n        var return_lexem = processModeInfo(mode_info[0], mode_info[1], mode_info[2]);\n        index += mode_info[0].length;\n        if (!return_lexem) {\n          index += mode_info[1].length;\n        }\n      } while (!mode_info[2]);\n      if(modes.length > 1)\n        throw 'Illegal';\n      return {\n        language: language_name,\n        relevance: relevance,\n        keyword_count: keyword_count,\n        value: result\n      }\n    } catch (e) {\n      if (e == 'Illegal') {\n        return {\n          language: null,\n          relevance: 0,\n          keyword_count: 0,\n          value: escape(value)\n        }\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /* Initialization */\n\n  function compileModes() {\n\n    function compileMode(mode, language, is_default) {\n      if (mode.compiled)\n        return;\n\n      if (!is_default) {\n        mode.beginRe = langRe(language, mode.begin ? mode.begin : '\\\\B|\\\\b');\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = '\\\\B|\\\\b'\n        if (mode.end)\n          mode.endRe = langRe(language, mode.end);\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(language, mode.illegal);\n      if (mode.relevance == undefined)\n        mode.relevance = 1;\n      if (mode.keywords)\n        mode.lexemsRe = langRe(language, mode.lexems || hljs.IDENT_RE, true);\n      for (var key in mode.keywords) {\n        if (!mode.keywords.hasOwnProperty(key))\n          continue;\n        if (mode.keywords[key] instanceof Object)\n          mode.keywordGroups = mode.keywords;\n        else\n          mode.keywordGroups = {'keyword': mode.keywords};\n        break;\n      }\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      // compiled flag is set before compiling submodes to avoid self-recursion\n      // (see lisp where quoted_list contains quoted_list)\n      mode.compiled = true;\n      for (var i = 0; i < mode.contains.length; i++) {\n        compileMode(mode.contains[i], language, false);\n      }\n      if (mode.starts) {\n        compileMode(mode.starts, language, false);\n      }\n    }\n\n    for (var i in languages) {\n      if (!languages.hasOwnProperty(i))\n        continue;\n      compileMode(languages[i].defaultMode, languages[i], true);\n    }\n  }\n\n  function initialize() {\n    if (initialize.called)\n        return;\n    initialize.called = true;\n    compileModes();\n  }\n\n  /* Public library functions */\n\n  function highlightBlock(block, tabReplace, useBR) {\n    initialize();\n\n    var text = blockText(block, useBR);\n    var language = blockLanguage(block);\n    if (language == 'no-highlight')\n        return;\n    if (language) {\n      var result = highlight(language, text);\n    } else {\n      var result = {language: '', keyword_count: 0, relevance: 0, value: escape(text)};\n      var second_best = result;\n      for (var key in languages) {\n        if (!languages.hasOwnProperty(key))\n          continue;\n        var current = highlight(key, text);\n        if (current.keyword_count + current.relevance > second_best.keyword_count + second_best.relevance) {\n          second_best = current;\n        }\n        if (current.keyword_count + current.relevance > result.keyword_count + result.relevance) {\n          second_best = result;\n          result = current;\n        }\n      }\n    }\n\n    var class_name = block.className;\n    if (!class_name.match(result.language)) {\n      class_name = class_name ? (class_name + ' ' + result.language) : result.language;\n    }\n    var original = nodeStream(block);\n    if (original.length) {\n      var pre = document.createElement('pre');\n      pre.innerHTML = result.value;\n      result.value = mergeStreams(original, nodeStream(pre), text);\n    }\n    if (tabReplace) {\n      result.value = result.value.replace(/^((<[^>]+>|\\t)+)/gm, function(match, p1, offset, s) {\n        return p1.replace(/\\t/g, tabReplace);\n      })\n    }\n    if (useBR) {\n      result.value = result.value.replace(/\\n/g, '<br>');\n    }\n    if (/MSIE [678]/.test(navigator.userAgent) && block.tagName == 'CODE' && block.parentNode.tagName == 'PRE') {\n      // This is for backwards compatibility only. IE needs this strange\n      // hack becasue it cannot just cleanly replace <code> block contents.\n      var pre = block.parentNode;\n      var container = document.createElement('div');\n      container.innerHTML = '<pre><code>' + result.value + '</code></pre>';\n      block = container.firstChild.firstChild;\n      container.firstChild.className = pre.className;\n      pre.parentNode.replaceChild(container.firstChild, pre);\n    } else {\n      block.innerHTML = result.value;\n    }\n    block.className = class_name;\n    block.dataset = {};\n    block.dataset.result = {\n      language: result.language,\n      kw: result.keyword_count,\n      re: result.relevance\n    };\n    if (second_best && second_best.language) {\n      block.dataset.second_best = {\n        language: second_best.language,\n        kw: second_best.keyword_count,\n        re: second_best.relevance\n      };\n    }\n  }\n  \n  function highlightText(block, tabReplace, useBR) {\n    initialize();\n\n    var text = block;\n    var language;\n    \n    var result = {language: '', keyword_count: 0, relevance: 0, value: escape(text)};\n    var second_best = result;\n    for (var key in languages) {\n      if (!languages.hasOwnProperty(key))\n        continue;\n      var current = highlight(key, text);\n      if (current.keyword_count + current.relevance > second_best.keyword_count + second_best.relevance) {\n        second_best = current;\n      }\n      if (current.keyword_count + current.relevance > result.keyword_count + result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    }\n\n    if (tabReplace) {\n      result.value = result.value.replace(/^((<[^>]+>|\\t)+)/gm, function(match, p1, offset, s) {\n        return p1.replace(/\\t/g, tabReplace);\n      })\n    }\n    if (useBR) {\n      result.value = result.value.replace(/\\n/g, '<br>');\n    }\n    return result.value;\n  }\n\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n    initialize();\n    var pres = document.getElementsByTagName('pre');\n    for (var i = 0; i < pres.length; i++) {\n      var code = findCode(pres[i]);\n      if (code)\n        highlightBlock(code, hljs.tabReplace);\n    }\n  }\n\n  function initHighlightingOnLoad() {\n    var original_arguments = arguments;\n    var handler = function(){initHighlighting.apply(null, original_arguments)};\n    if (window.addEventListener) {\n      window.addEventListener('DOMContentLoaded', handler, false);\n      window.addEventListener('load', handler, false);\n    } else if (window.attachEvent)\n      window.attachEvent('onload', handler);\n    else\n      window.onload = handler;\n  }\n\n  var languages = {}; // a shortcut to avoid writing \"this.\" everywhere\n\n  /* Interface definition */\n\n  this.LANGUAGES = languages;\n  this.initHighlightingOnLoad = initHighlightingOnLoad;\n  this.highlightBlock = highlightBlock;\n  this.initHighlighting = initHighlighting;\n  this.highlightText = highlightText;\n\n  // Common regexps\n  this.IDENT_RE = '[a-zA-Z][a-zA-Z0-9_]*';\n  this.UNDERSCORE_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*';\n  this.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  this.C_NUMBER_RE = '\\\\b(0x[A-Za-z0-9]+|\\\\d+(\\\\.\\\\d+)?)';\n  this.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|\\\\.|-|-=|/|/=|:|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  this.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\.', relevance: 0\n  };\n  this.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [this.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n  this.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [this.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n  this.C_LINE_COMMENT_MODE = {\n    className: 'comment',\n    begin: '//', end: '$'\n  };\n  this.C_BLOCK_COMMENT_MODE = {\n    className: 'comment',\n    begin: '/\\\\*', end: '\\\\*/'\n  };\n  this.HASH_COMMENT_MODE = {\n    className: 'comment',\n    begin: '#', end: '$'\n  };\n  this.NUMBER_MODE = {\n    className: 'number',\n    begin: this.NUMBER_RE,\n    relevance: 0\n  };\n  this.C_NUMBER_MODE = {\n    className: 'number',\n    begin: this.C_NUMBER_RE,\n    relevance: 0\n  };\n\n  // Utility functions\n  this.inherit = function(parent, obj) {\n    var result = {}\n    for (var key in parent)\n      result[key] = parent[key];\n    if (obj)\n      for (var key in obj)\n        result[key] = obj[key];\n    return result;\n  }\n}();\n"]},"metadata":{},"sourceType":"script"}