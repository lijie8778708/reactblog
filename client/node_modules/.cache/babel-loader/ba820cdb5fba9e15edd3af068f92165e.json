{"ast":null,"code":"var _jsxFileName = \"/Users/jieli/Desktop/reactblog/client/src/markdown/Markdown.js\";\nimport React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport CodeBlock from './CodeBlock';\n\nconst styles = theme => ({\n  listItem: {\n    marginTop: theme.spacing(1)\n  }\n}); // const options = {\n//     overrides: {\n//         h1: {\n//             component: Typography,\n//             props: {\n//                 gutterBottom: true,\n//                 variant: 'h5',\n//             },\n//         },\n//         h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n//         h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n//         h4: {\n//             component: Typography,\n//             props: { gutterBottom: true, variant: 'caption', paragraph: true },\n//         },\n//         p: { component: Typography, props: { paragraph: true } },\n//         a: { component: Link },\n//         li: {\n//             component: withStyles(styles)(({ classes, ...props }) => (\n//                 <li className={classes.listItem}>\n//                     <Typography component=\"span\" {...props} />\n//                 </li>\n//             )),\n//         },\n//     },\n// };\n\n\nexport default function Markdown(props) {\n  return /*#__PURE__*/React.createElement(ReactMarkdown, Object.assign({\n    renderers: {\n      code: CodeBlock\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jieli/Desktop/reactblog/client/src/markdown/Markdown.js"],"names":["React","ReactMarkdown","withStyles","Typography","Link","CodeBlock","styles","theme","listItem","marginTop","spacing","Markdown","props","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACvBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL;AADa,CAAZ,CAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,sBAAO,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAER;AAAR;AAA1B,KAAmDO,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport CodeBlock from './CodeBlock';\n\nconst styles = (theme) => ({\n    listItem: {\n        marginTop: theme.spacing(1),\n    },\n});\n\n// const options = {\n//     overrides: {\n//         h1: {\n//             component: Typography,\n//             props: {\n//                 gutterBottom: true,\n//                 variant: 'h5',\n//             },\n//         },\n//         h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n//         h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n//         h4: {\n//             component: Typography,\n//             props: { gutterBottom: true, variant: 'caption', paragraph: true },\n//         },\n//         p: { component: Typography, props: { paragraph: true } },\n//         a: { component: Link },\n//         li: {\n//             component: withStyles(styles)(({ classes, ...props }) => (\n//                 <li className={classes.listItem}>\n//                     <Typography component=\"span\" {...props} />\n//                 </li>\n//             )),\n//         },\n//     },\n// };\n\nexport default function Markdown(props) {\n    return <ReactMarkdown renderers={{ code: CodeBlock }} {...props} />;\n}"]},"metadata":{},"sourceType":"module"}